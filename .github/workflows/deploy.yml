# This is a basic workflow to help you get started with Actions

name:  Deploy to GitHub Pages

# Controls when the workflow will run
on:
  workflow_run:
    workflows: [ "Playwright E2E Tests" ]
    types:
      - completed

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        
      # ✅ Download Allure Report Artifact
      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report  
   #Angular uses client-side routing. GitHub Pages, by default, doesn't understand Angular's routing structure and tries to fetch files directly from the angular-e2e-playwright/ directory, which doesn't exist as a physical path.
   #GitHub Pages doesn't support fallback routing for Single Page Applications (SPA).
      - name: Build Angular app
        run: npm run build -- --base-href=/angular-e2e-playwright/
        
      # ✅ Combine Angular and Allure Report
      - name: Combine Angular Build and Allure Report
        run: |
          mkdir -p combined
          cp -r ./dist/angular-e2e-playwright/browser/* ./combined
          cp -r ./allure-report/* ./combined/allure-report  

      # ✅ Upload build artifacts to GitHub Pages
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
           path: ./combined
    
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         
      
